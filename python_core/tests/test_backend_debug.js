const WebSocket = require('ws');\n\nconsole.log('=== 백엔드 상태 디버깅 ===');\n\nconst ws = new WebSocket('ws://localhost:18765');\n\nws.on('open', function open() {\n  console.log('WebSocket 연결 성공!');\n  \n  // 디바이스 상태 요청\n  ws.send(JSON.stringify({\n    type: 'command',\n    command: 'get_device_status'\n  }));\n  \n  // 연결 정보 요청\n  ws.send(JSON.stringify({\n    type: 'command',\n    command: 'get_connection_info'\n  }));\n  \n  // 5초 후 종료\n  setTimeout(() => {\n    console.log('테스트 완료');\n    ws.close();\n    process.exit(0);\n  }, 5000);\n});\n\nws.on('message', function message(data) {\n  try {\n    const parsed = JSON.parse(data);\n    \n    if (parsed.type === 'command_response') {\n      console.log(`[${parsed.command}] 응답:`);\n      console.log(JSON.stringify(parsed.data, null, 2));\n    } else if (parsed.type === 'event' && parsed.event_type === 'device_info') {\n      console.log('device_info 이벤트:');\n      console.log('   connected:', parsed.data.connected);\n      console.log('   device_info:', parsed.data.device_info);\n      console.log('   is_streaming:', parsed.data.is_streaming);\n    } else {\n      console.log(`기타 메시지: ${parsed.type}`);\n    }\n  } catch (error) {\n    console.log('Raw 메시지:', data.toString().substring(0, 100));\n  }\n});\n\nws.on('error', function error(err) {\n  console.error('WebSocket 오류:', err.message);\n});\n\nws.on('close', function close() {\n  console.log('WebSocket 연결 종료');\n}); 